[build-system]
requires = ["setuptools>=67.5"]
build-backend = "setuptools.build_meta"

[project]
name = "trixify"
dynamic = ["version"]
description = "Matrix notify bot, using nvchecker as a backend."
authors = [
    {name = "Anton Hvornum", email = "torxed@archlinux.org"},
]
maintainers = [
    {name = "Anton Hvornum", email = "torxed@archlinux.org"}
]
license = {text = "AGPL-3.0-or-later"}
requires-python = ">=3.12"
keywords = ["matrix", "bot", "nvchecker"]
classifiers = [
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3.0 only (AGPL-3.0-only)",
    "Programming Language :: Python :: 3"
]
dependencies = [
    "pydantic",
    "matrix-nio[e2e]",
    "nvchecker"
]

[project.urls]
Home = "https://github.com/Torxed/trixify"
Documentation = "https://github.com/Torxed/trixify"
Source = "https://github.com/Torxed/trixify"

[project.optional-dependencies]
dev = [
    "flake8",
    "isort",
    "pytest",
]

[tool.setuptools.dynamic]
readme = {file = ["README.md"]}
version = {attr = "trixify.__version__"}

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
"trixify" = [
    "**/*.py",
]

[tool.setuptools.package-dir]
trixify = "trixify"

[project.scripts]
trixify = "trixify:run_as_a_module"

[tool.flake8]
max-line-length = 240

[tool.isort]
multi_line_output=3
include_trailing_comma=true
force_grid_wrap=0
use_parentheses=true
line_length=240
not_skip = "__init__.py"

[tool.distutils.bdist_wheel]
universal = true

[tool.pytest.ini_options]
addopts = "-vv"
testpaths = [
    "tests"
]